@using Application.Web.Areas.Administration.Models
@using PagedList;
@using PagedList.Mvc;

@model IEnumerable<TeacherListViewModel>

@{
    ViewBag.Title = "Teachers List";
    var pagedList = (IPagedList)Model;
}

<h3>@ViewBag.Title</h3>

@using (Html.BeginForm("Index", "Teachers", FormMethod.Get))
{
    <div class="input-group">
        <span class="input-group-addon">
            <span class="glyphicon glyphicon-search"></span>
        </span>

        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })

       <span class="input-group-btn pull-left">
           <button class="btn btn-default" type="submit">Search</button>
       </span>
    </div>
}

<div class="table-list">
    <table class="table table-striped" id="donors-list">
        <tr>
            <th>
                @Html.ActionLink("Username", "Index",
                    new { sortOrder = ViewBag.UsernameSortParam, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Name", "Index",
                    new { sortOrder = ViewBag.NameSortParam, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Email)
            </th>
            <th></th>
        </tr>

        @foreach (var teacher in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => teacher.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => teacher.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => teacher.Email)
                </td>
                <td class="col-md-2">
                    @Html.ActionLink("Edit", "Edit", new { username = teacher.UserName }, null) |
                    @Html.ActionLink("Details", "Details", new { username = teacher.UserName }, null) |
                    @Html.ActionLink("Delete", "Delete", new { id = teacher.Id }, null)
                </td>
            </tr>
        }
    </table>
</div>

<br />
Page @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) of @pagedList.PageCount
@Html.PagedListPager((IPagedList)Model,
    page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))